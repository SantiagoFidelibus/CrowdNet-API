# ConfiguraciÃ¯Â¿Â½n general de la aplicaciÃ¯Â¿Â½n
spring.application.name=capital-connection

# ConfiguraciÃ¯Â¿Â½n de la base de datos
spring.datasource.url=${bd_url}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${bd_username}
spring.datasource.password=${bd_password}

# ConfiguraciÃ¯Â¿Â½n de JPA y Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.sql.init.mode=always
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
# Configuración de HikariCP para evitar errores por límite de conexiones
spring.datasource.hikari.maximumPoolSize=4
spring.datasource.hikari.minimumIdle=1
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1740000
spring.datasource.hikari.keepaliveTime=300000

# ConfiguraciÃ¯Â¿Â½n de OAuth2 con Auth0
spring.security.oauth2.client.registration.google.client-id=${OAuth2_client-id}
spring.security.oauth2.client.registration.google.client-secret=${OAuth2_client-secret}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.redirect-uri=${OAuth2_redirect-uri}
spring.security.oauth2.client.registration.google.client-name=Google

# ConfiguraciÃ¯Â¿Â½n del proveedor OAuth2 (Google)
spring.security.oauth2.client.provider.google.issuer-uri=${OAuth2_issuer-uri}
spring.security.oauth2.client.provider.google.authorization-uri=${OAuth2_authorization-uri}

# ConfiguraciÃ¯Â¿Â½n de claves RSA
rsa.public-key=${RSAPUBLIC}
rsa.private-key=${RSAPRIVATE}

# ConfiguraciÃ¯Â¿Â½n de logging
logging.level.org.springframework=INFO
logging.level.com.crowdfunding.capital_connection.controller=DEBUG